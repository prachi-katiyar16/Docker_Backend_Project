spring.application.name=Order-Service
server.port=8084

# Use environment variables for the host and port
cart.service.url=http://gateway-service:8080/cart

# --- Database Configuration ---
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:5432/${DB_NAME:ecommerce_shared_db}
spring.datasource.username=${DB_USER:microservice_user}
spring.datasource.password=${DB_PASS:YourStrong!Secure!Password123}

# --- Kafka Configuration ---
spring.kafka.bootstrap-servers=kafka:9092



# -- JPA and Hibernate Configuration --
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# -- Kafka Producer Configuration --
# Address of the Kafka broker
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=true






eureka.client.enabled=false

# -- Kafka Consumer Configuration (for payment results) --
spring.kafka.consumer.group-id=order-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.common.dto


