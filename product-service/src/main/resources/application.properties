spring.application.name=Product-Service


server.port=8084

# --- Database Configuration ---
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:5432/${DB_NAME:ecommerce_shared_db}
spring.datasource.username=${DB_USER:microservice_user}
spring.datasource.password=${DB_PASS:YourStrong!Secure!Password123}

# --- Kafka Configuration ---
spring.kafka.bootstrap-servers=kafka:9092

# -- JPA and Hibernate Configuration --
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true


spring.cloud.config.enabled=false
eureka.client.enabled=false


# Address of the Kafka broker
spring.kafka.consumer.group-id=product-stock-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.common.dto



# Delegate to JsonDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# Tell it the default DTO (example: OrderPlacedEvent, or StockUpdatedEvent if you have one)
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.common.dto.OrderPlacedEvent






